# search space
arch_setting = dict(
    kernel_size=[  # [min_kernel_size, max_kernel_size, step]
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
        [3, 7, 2],
    ],
    num_blocks=[  # [min_num_blocks, max_num_blocks, step]
        [1, 1, 1],
        [1, 1, 1],
        [0, 1, 1],
        [0, 1, 1],
        [1, 1, 1],
        [1, 1, 1],
        [0, 1, 1],
        [0, 1, 1],
        [1, 1, 1],
        [1, 1, 1],
        [0, 1, 1],
        [0, 1, 1],
        [1, 1, 1],
        [1, 1, 1],
        [0, 1, 1],
        [0, 1, 1],
        [1, 1, 1],
        [1, 1, 1],
        [0, 1, 1],
        [0, 1, 1],
    ],
    expand_ratio=[  # [min_expand_ratio, max_expand_ratio, step]
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [3, 6, 1],
        [6, 6, 1],  # last layer
    ],
    num_out_channels=[  # [min_channel, max_channel, step]
        [16, 16, 1],  # first layer
        [24, 24, 1],
        [24, 24, 1],
        [24, 24, 1],
        [24, 24, 1],
        [40, 40, 1],
        [40, 40, 1],
        [40, 40, 1],
        [40, 40, 1],
        [80, 80, 1],
        [80, 80, 1],
        [80, 80, 1],
        [80, 80, 1],
        [112, 112, 1],
        [112, 112, 1],
        [112, 112, 1],
        [112, 112, 1],
        [160, 160, 1],
        [160, 160, 1],
        [160, 160, 1],
        [160, 160, 1],
        [1280, 1280, 1],  # last layer
    ])

input_resizer_cfg = dict(
    input_sizes=[[192, 192], [208, 208], [224, 224], [256, 256]])

nas_backbone = dict(
    type='AttentiveMobileNetV3',
    arch_setting=arch_setting,
    out_indices=(20, ),
    stride_list=[2, 1, 1, 1] * 3 + [1] * 4 + [2] + [1] * 3,
    with_se_list=[False] * 4 + [True] * 4 + [False] * 4 + [True] * 8,
    act_cfg_list=['ReLU'] * 9 + ['HSwish'] * 13,
    conv_cfg=dict(type='OFAConv2d'),
    norm_cfg=dict(type='DynamicBatchNorm2d', momentum=0.1))
