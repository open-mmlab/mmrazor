# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'model-index.yml'
      - 'configs/**'
      - 'docs/**'
      - '.dev_scripts/**'

  pull_request:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'model-index.yml'
      - 'configs/**'
      - 'docs/**'
      - '.dev_scripts/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cpu:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        torch: [1.5.1, 1.6.0, 1.7.1, 1.8.0, 1.8.1, 1.9.0, 1.10.2]
        experimental: [true]
        include:
          - torch: 1.5.1
            torchvision: 0.6.1
            mmcv: 1.5
          - torch: 1.6.0
            torchvision: 0.7.0
            mmcv: 1.6
          - torch: 1.7.1
            torchvision: 0.8.2
            mmcv: 1.7
          - torch: 1.8.0
            torchvision: 0.9.0
            mmcv: 1.8
          - torch: 1.8.0
            torchvision: 0.9.0
            mmcv: 1.8
            python-version: 3.8
          - torch: 1.8.0
            torchvision: 0.9.0
            mmcv: 1.8
            python-version: 3.9
          - torch: 1.8.1
            torchvision: 0.9.1
            mmcv: 1.8
          - torch: 1.8.1
            torchvision: 0.9.1
            mmcv: 1.8
            python-version: 3.8
          - torch: 1.8.1
            torchvision: 0.9.1
            mmcv: 1.8
            python-version: 3.9
          - torch: 1.9.0
            torchvision: 0.10.0
            mmcv: 1.9
          - torch: 1.9.0
            torchvision: 0.10.0
            mmcv: 1.9
            python-version: 3.8
          - torch: 1.9.0
            torchvision: 0.10.0
            mmcv: 1.9
            python-version: 3.9
          - torch: 1.10.1
            torchvision: 0.11.2
            mmcv: 1.10
          - torch: 1.10.1
            torchvision: 0.11.2
            mmcv: 1.10
            python-version: 3.8
          - torch: 1.10.1
            torchvision: 0.11.2
            mmcv: 1.10
            python-version: 3.9
          - torch: 1.10.2
            torchvision: 0.11.3
            mmcv: 1.10
          - torch: 1.10.2
            torchvision: 0.11.3
            mmcv: 1.10
            python-version: 3.8
          - torch: 1.10.2
            torchvision: 0.11.3
            mmcv: 1.10
            python-version: 3.9
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pillow
        run: pip install Pillow==6.2.2
        if: ${{matrix.torchvision < 0.5}}
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch${{matrix.mmcv}}/index.html
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install mmcls dependencies
        run: |
          pip install -r requirements.txt
      - name: Install timm
        run: |
          pip install timm
      - name: Build and install
        run: |
          rm -rf .eggs
          pip install -e . -U
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmrazor -m pytest tests/
          coverage xml
          coverage report -m --omit="mmrazor/apis/*"
      # Only upload coverage report for python3.7 && pytorch1.5
      - name: Upload coverage to Codecov
        if: ${{matrix.torch == '1.5.0' && matrix.python-version == '3.7'}}
        uses: codecov/codecov-action@v1.0.10
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
