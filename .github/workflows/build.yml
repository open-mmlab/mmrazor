# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    paths-ignore:
      - "README.md"
      - "README_zh-CN.md"
      - "model-index.yml"
      - "configs/**"
      - "docs/**"
      - ".dev_scripts/**"

  pull_request:
    paths-ignore:
      - "README.md"
      - "README_zh-CN.md"
      - "model-index.yml"
      - "configs/**"
      - "docs/**"
      - ".dev_scripts/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        torch:
          [1.5.1+cpu, 1.6.0+cpu, 1.7.1+cpu, 1.8.0+cpu, 1.9.0+cpu, 1.10.1+cpu]
        include:
          - torch: 1.5.1+cpu
            torchvision: 0.6.1+cpu
            mmcv_link: cpu/torch1.5
            python-version: 3.7
          - torch: 1.6.0+cpu
            torchvision: 0.7.0+cpu
            mmcv_link: cpu/torch1.6
            python-version: 3.7
          - torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            mmcv_link: cpu/torch1.7
            python-version: 3.7
          - torch: 1.8.0+cpu
            torchvision: 0.9.0+cpu
            mmcv_link: cpu/torch1.8
            python-version: 3.8
          - torch: 1.9.0+cpu
            torchvision: 0.10.0+cpu
            mmcv_link: cpu/torch1.9
            python-version: 3.8
          - torch: 1.10.1+cpu
            torchvision: 0.11.2+cpu
            mmcv_link: cpu/torch1.10
            python-version: 3.9
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/${{matrix.mmcv_link}}/index.html
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install unittest dependencies
        run: |
          pip install -r requirements.txt
      - name: Install timm
        run: |
          pip install timm
      - name: Build and install
        run: |
          rm -rf .eggs
          pip install -e . -U
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmrazor -m pytest tests/
          coverage xml
          coverage report -m --omit="mmrazor/apis/*"
      # Only upload coverage report for python3.7 && pytorch1.5
      - name: Upload coverage to Codecov
        if: ${{matrix.torch == '1.5.1+cpu' && matrix.python-version == '3.7'}}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  test_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        torch: [1.8.2+cpu]
        torchvision: [0.9.2+cpu]
        mmcv_link: [cpu/torch1.8]
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python -m pip install pip --upgrade --user
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
      - name: Install OpenCV
        run: |
          pip install opencv-python>=3
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8/index.html --only-binary mmcv-full
      - name: Install unittest dependencies
        run: |
          pip install -r requirements.txt
      - name: Install timm
        run: |
          pip install timm
      - name: Build and install
        run: |
          pip install -e . -U
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmrazor -m pytest tests/
          coverage xml
          coverage report -m --omit="mmrazor/apis/*"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
